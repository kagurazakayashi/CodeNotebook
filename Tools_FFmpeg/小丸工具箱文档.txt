==========================联系方式==========================

任何建议或疑问可以通过以下方式反馈给小丸，
反馈前请先阅读FAQ：如何报错？ » Beining 's Another site
<https://www.cnbeining.com/2013/11/how-do-i-report-an-error/>
小丸之家：<http://www.maruko.in>
QQ群：234289875 <http://jq.qq.com/?_wv=1027&k=Uw2UZI>
新浪微博：@小丸酱 <http://weibo.com/xiaowan3>

==========================鸣谢信息==========================

七神为小丸工具箱所使用的工具链的完善做出很大贡献，目前所使用的x264就是由他编译的7mod版，另外他还制作了集成 .Net Framework 等运行库的安装版，今后用户可以更方便使用工具箱了。
他的GitHub：
<https://github.com/pphh77>
x264编码器采用 x264-7mod 由七神编译。
<https://github.com/Freecom/x264>
7mod 基于x264 - 06_taro编译版
<http://www.nmm-hd.org/newbbs/viewtopic.php?f=8&t=219>
感谢两位在编码器方面的贡献！

本软件使用的参数如下：
x264 --crf 24 --preset 8 -r 6 -b 6 -I infinite -i 1 --scenecut 60 -f 1:1 --qcomp 0.5 --psy-rd 0.3:0 --aq-mode 2 --aq-strength 0.8 --vf resize:768,432,,,,lanczos -o "%~dpn1_v.mp4" "%~1"
参数来自《尽量不浪费压制时间的简单视频高压要点》：
<http://blog.sina.com.cn/s/blog_3df9d2330100zcy4.html>
感谢zj262144耗费多时研究出来的压制参数，他的尽量不浪费压制时间的简单视频高压要点是本软件的理论基础。

感谢RH字幕组提供的日语化支持！以下是RH组长的招募词：
我们是一群兔子,我们有一个温馨的窝,叫做兔子洞(Rabbit Hole).这里是连接二次元的通道,RH字幕组,欢迎各种小伙伴们加入!
字幕组考核群: 292710646

感谢月儿和老猫。月儿为工具箱添加了进度提示窗和日至保存功能，让大家摆脱了用黑色DOS窗口。软件编写中遇到的诸多问题，都是在老猫的指导下顺利解决。今生能遇见老猫真是太好了！ (」 ω )」呜-☆!(/ ω )/喵-! 

感谢设计师Dospy-梦影决幻制作的萌萌的启动图和安装界面，还有他绘制了酷酷的概念界面，不知啥时候能实现（逃）。

感谢ACI中文字幕组提供的服务器和域名，以下是站长北宁的致辞：
ACI中文字幕组很荣幸赞助小丸工具箱。这是ACI字幕组对开源软件进行赞助的重要部分。关于ACI字幕组的详情，欢迎登陆 <https://www.chineseaci.com> 查看。ACI字幕组是大中华地区唯一专注于航空类题材的中文字幕组。

ACI Chinese Fansub Group is honored to support Maruko Toolbox. This is one of the most important parts of our continuous support to the open-source society. For more information about ACICFG, please visit <https://www.chineseaci.com> . ACICFG is the only Chinese fansub group that focus on aviation in Greater China.

感谢交流群里的以蓝蓝、あなたがいた森为首的管理员和群友们热心解答各种奇怪的问题，有你们这样热心的用户真是小丸的大幸！

==========================使用说明==========================

视频基础知识：
为什么视频发布一般用rmvb和mkv而不用flash用flv和f4v？（主要考虑压缩比，次要考虑流媒体特性） - 北宁的回答 - 知乎
<https://www.zhihu.com/question/21437096/answer/18230811>

视频教程：
<http://maruko.appinn.me/tutorial.html>

常见问题

1、为什么压制后为0kb？
2pass有时候存在一些问题，请尽量使用CRF。

2、为什么视频无法封装为FLV？
原视频视频编码必须为H264，音频编码必须为AAC或mp3。

3、为什么上传后视频颜色变绿？
请使用x264_32-8bit。

4、为什么字幕没有内嵌进去？
1.使用x264_32-8bit 2.不要设置FPS。

5. 各个版本的x264有什么区别？
如x264_32-8bit，32代表适用于32位系统（当然64位系统也可以用），8bit表示色深为8位，以此推类。

6. x265的字幕内嵌是怎么实现的？
用了libass，可能和vsfilter的效果有差异。

●视频压制

方法一（推荐）：
1.在视频页面输入视频，音频、字幕，设置各项参数。
宽度和高度就是视频分辨率，如1080×720的视频的宽度是1080，高度是720。如果全都设为0即不改变分辨率。
CRF中的质量的范围可以是1.0 - 51.0。一般设置21-25之间就可以，此值越大码率越低。 21可以压制出高码率。网络播放则设为24即可。
质量是x264参数中的 CRF（Constant Rate Factor），这种码率控制方式是非常优秀的，以至于可以无需2pass压制，即使1pass也能实现非常好的码率分配利用。很多人在压片的时候不清楚应该给视频压到多少码率才比较好。CRF就是按需要来分配码率的。
起始帧即开始编码的第一帧。
编码帧数即从起始帧开始计算的全部编码帧数，当设为0时为编码全部帧。
自定义模式是手动输入x264参数进行压制。如输入：--preset medium
预置了常用压制参数，用户可以在preset文件夹下手动添加常用参数。
2.切换到音频页面设置参数：音频编码器一般选NeroAAC，码率默认为128，可酌情调整。如果安装了QuickTime，也可使用QAAC。
3.点击视频页面的压制。
需要上传新浪视频的请在封装页面转换为FLV。

方法二：
1.音频获取：方法a不作重编码，但要求音频格式为AAC。方法b重编码，但无任何限制。
a.进入抽取页面，抽取原视频的音频流，音频流文件生成在原视频目录下面。一般是AAC格式。
b.进入音频页面，输入视频，设置码率，一般网络视频96Kbps即可。压制得到新的音频流。
2.视频获取：
进入视频页面，输入原视频文件，设置质量（或码率）、宽度、高度。点击压制。
3.封装：
进入封装页面，将以上得到视频流和音频流合并即可。


●内嵌字幕

方法一（推荐）：
在小丸工具箱中的视频页面分别输入视频和字幕，设置各项参数后压制。

方法二：
注意：安装终极解码时必须勾选AviSynth。
先在音频和视频页面设定参数，然后在AVS页面分别输入视频和字幕，点击“生成”按钮，再点击“预览”，在弹出的播放器中点击播放，确认正常播放后，点击AVS压制。

详细教程《视频内嵌ASS字幕教程》
<http://blog.sina.com.cn/s/blog_628400c20100po9q.html>

●封装转换
封装页面的下半部分，可以实现flv或mp4封装无损转换。

●视频截取
常用页面

●抽取
抽取页面

●音频转换
音频页面，输入任意视频或音频，转换为AAC/MP3/WAV音频。

●一图流
常用页面，输入图片和音频，设置参数后压制。(建议图片分辨率为16:9/4:3，奇葩分辨率或失败)

●后黑
常用页面，输入FLV封装视频，设置后黑目标参数后压制。

NeroAAC常用参数：
-q 1 -lc 

QAAC常用参数：
cbr：
-c 256 -q 2
-c 256 -q 2 - -no-optimize -noreplaygain
cvbr：
--cvbr -q 2
tvbr：
-V 127 -q 2 --no-optimize -noreplaygain - -o %d 

-q 2就是--highest在qaac的写法，-V就是--tvbr在qaac的写法。
qaac直接可以内嵌信息完整参数（cvbr256 -q 2）：--cvbr 256 -q 2 -o %d - --title "%t" --artist "%a" --album "%g" --date "%y" --track "%n" --genre "%m"


x264常用参数：

更多参数详解：<https://www.nmm-hd.org/doc/X264%E8%A8%AD%E5%AE%9A>

本文对应的是x264命令行模式，VFW方式也用相同的参数，不过是图形界面，可以自己找对应的英文。
新版本x264取消了--no-b-adapt、--nf、--b-rdo、--bime、--rceq参数，请不要再使用。

使用格式：x264 默认选项 -o 输出文件 输入文件 [长x宽]
输入支持格式：RAW/y4m/avi/avs(编译时可选)
输出支持格式：264/mkv/mp4(编译时可选)

x264的许多参数可以有-/--两种输入法。以下等价参数用“参数1/参数2 <必需数值格式>”表示。

-h/--help 列出较常用的选项
--longhelp 列出较常用的选项，更详细的帮助

帧类型选项：

-I/--keyint <整数> 最大IDR帧间距，默认250
-i/--min-keyint <整数> 最小IDR帧间距，默认25
--scenecut <整数> 画面动态变化限，当超出此值时插入I帧，默认40
--pre-scenecut         更快，但低精度的画面动态检测，需要多线程，并且在启用多线程时自动打开。
-b/--bframes <整数>     在IP帧之间可插入的B帧数量最大值，范围0~16，默认0
-b-adapt 自适应B帧判定模式。 0：关闭；1：快速；2：优化（高B帧时速度大大下降），默认1
--b-bias <整数> 控制插入B帧判定，范围-100~+100，越高越容易插入B帧，默认0
--b-pyramid             允许B帧做参考帧
--no-cabac              关闭内容自适应二进制算术编码(CABAC，高效率的熵编码)(会提高速度，但严重影响质量)
-r/--ref <整数>         最大参考帧数，范围0~16，默认1
--no-deblock            关闭环路滤波(一种除马赛克算法)
-f/--filter <alpha:beta>设置环路滤波的AlphaC和Beta的参数，范围-6-6，默认都为0
--interlaced 启用纯交错模式（用于隔行扫描的源）

码率控制选项：

-q/--qp <整数> 固定量化模式并设置使用的量化值，范围0~51，0为无损压缩，默认26
-B/--bitrate <整数> 设置平均码率
--crf <整数> 质量模式，量化值动态可变
--vbv-maxrate <整数> 平均码率模式下，最大瞬时码率，默认0(与-B设置相同)
--vbv-bufsize <整数> 码率控制缓冲区的大小，单位kbit，默认0
--vbv-init <小数> 码率控制缓冲区数据保留的最大数据量与缓冲区大小之比，范围0~1.0，默认0.9
--qpmin <整数> 设置最小量化值，范围0~51，默认10
--qpmax <整数> 设置最大量化值，范围0~51，默认51
--qpstep <整数> 设置相邻帧之间的量化值差，范围0~50，默认4
--ratetol <小数> 平均码率模式下，瞬时码率可以偏离的倍数，范围0.1~100.0，默认1.0
--ipratio <小数> I帧和P帧之间的量化系数，默认1.40
--pbratio <小数> P帧和B帧之间的量化系数，默认1.30
--chroma-qp-offset <整数> 色度和亮度之间的量化差，范围-12~+12，默认0
--aq-mode <整数>     自适应量化模式，可以在1帧中不同宏块间重新分配量化值，能提高暗部细节，但会提高码率。与--qp不能同时使用，0关闭，1开启，默认1
--aq-strength <小数>   AQ强度，减小低细节宏块的量化值，默认1.0
-p/--pass <1|2|3> 多次压缩码率控制
1：第一次压缩，创建统计文件
2：按建立的统计文件压缩并输出，不覆盖统计文件，
3：按建立的统计文件压缩，优化统计文件
--stats <字符串> 统计文件的名称，默认"x264_2pass.log"
--qcomp <小数> 线性量化控制，0.0为固定码率，1.0为固定量化值，默认0.6，只用于2-pass和质量模式
--cplxblur <小数> 根据相邻帧平滑量化值比例的最大值，范围0~99.9，默认20.0，只用于2-pass和质量模式
--qblur <小数> 对统计文件结果平滑量化值比例的最大值,范围0~99.9，默认0.5，只用于2-pass
--zones <z0>/<z1>/… 分段量化，格式为：<开始帧>,<结束帧>,<选项>，可选项为：q=<整数>(量化值)或b=<小数>(码率倍数)
--qpfile <字符串>      强制帧的类型和量化值


输入、输出选项：

-o/--output 指定输出文件
--sar width:height 设置采样比例设置，表示采样像素长宽比
--fps <小数|rational> 设定帧率
--seek <整数> 设定起始帧
--frames <整数> 最大编码帧数
--level <字符串> 类似于MPEG4里的"profile&level"，表示编/解码等级
-v/--verbose 显示每一个帧的信息
--progress 显示编码进程
--quiet 安静模式
--no-psnr 关闭PSNR计算
--no-ssim 关闭SSIM计算
--threads <整数> 编码线程(使用多线程技术)
--thread-input 在自有线程中运行Avisynth
--non-deterministic   非确定性。可以稍微减少多线程的开销
--asm <整数> 覆盖CPU检测
--no-asm 关闭全部CPU优化指令
--visualize 显示编码帧信息图，和XVID类似
--dump-yuv <字符串>   保存帧为yuv格式
--sps-id <整数> 设置SPS和PPS的ID值，默认0
--aud 使用数据定义符号


========================更新说明========================
2016/10/23
增加x265编码器。
增加Lame编码器用以编码mp3格式音频。
更新工具链(x264,ffmpeg,mkvtoolnix)。
优化预设参数功能。
检测AviSynth是否已经安装，如没有安装使用内置的AviSynth。
压制前删除已经存在的临时文件。
在进度窗口点击放弃任务时，弹出确认对话框。
更新启动图和图标。
移除后黑功能。
一图流功能在未能获取音频长度时可以手动填写视频长度。
当视频原本没有音频时，选择了无音频流压制选项后，不弹出“经检测，视频不包含音频流是否采用无音频流方式压制？ ”的提示。

2015/9/10
内置第三方的MKV抽取工具gMKVExtractGUI
抽取功能增加对大部分视频格式的支持
增加用户反馈功能
视频页面双击字幕文件文本框可移除已输入的字幕文件
视频页面中的批量压制列表框用蓝色标出具有字幕的视频文件
优化自动更新功能
设置页面增加自动检查更新选项
自动保存压制日志到logs文件夹
封装页面中增加替换音频功能
封装页面的批量处理中将容器不支持的音频转换为AAC以完成封装
AVS页面中的复制读取滤镜语句的复制按钮改为插入按钮
优化设置页面
视频页面的音频模式增加复制音频流选项
修复大量bug

2015/2/14
修复使用2pass并且修改分辨率压制时无法加上字幕的bug
音频压制采用管道，不再产生中间的WAV文件
可以拖拽文件切换标签卡
可以使用Ctrl+数字切换各标签
输入框改为只读
更改官网链接为 <http://www.maruko.in/>

2015/1/20
视频页面增加字幕后缀选择框
视频页面移除FPS选项
音频页面增加FDKAAC、FLAC、ALAC三种编码器
音频页面增加拼接音频的功能
移除对多开软件的限制并增加对同时执行多个压制任务的支持
压制页面增加更多的输出格式选择
封装页面增加PAR选项。
封装页面支持更多格式的封装转换。
Mediainfo页面中显示更多参数
使用QAAC时判断系统是否安装QuickTime
修复没有选择x264程序会抛出异常的bug
修复保存日志文件时编码方式不对导致文本中存在多余空格的bug

2014/6/1
更换x264为7mod版
更新ffmpeg
增加x264的线程设置
增加日语界面支持
增加启动画面
帮助采用富文本展现
使用全新压制进度窗口代替cmd窗口
增加更多的AVS滤镜，并可以在AVS页面选取
可以设置AVS预览播放器
增加检查更新
完善参数的自动保存

2014/3/21
增加后黑功能
更新Mediainfo 0.7.67
更新x264_rev2409_tMod.7z

2014/1/29
移除2Pass模式
新增一图流视频压制功能
更新x264

2013/11/25
增加批量一键压制功能
增加多语言支持（包括繁体中文和英文）
增加任意文件转换到wav功能
增加音频替换功能
增加起始帧和编码帧数选项(--seek --frames)
更新x264

2013/7/27
音频页面新增QAAC编码器
输出文件名后缀改为英文

2013/6/4
AVS页面支持idx字幕
视频页面支持选择批量输出的路径
修复flv封装的bug
修复FPS为59.94的bug
x264参数的 -r5 -b 5 改为-r 3 -b 3
分离器默认使用lavf

2013/2/14
以功能为导向的界面调整，美化了部分控件
加强了AVS页面功能
增加音频的批量压制

2012/10/17
更新帮助页面
更新x264
mp4box支持抽取多音轨视频

2012/9/3
修复内嵌字幕时不能更改视频分辨率的bug
增加x264选择功能
更新x264版本
更新帮助页面

2012/06/15
AVS页面中可将avs文件拖曳到框中
增加了帮助页面

2012/05/23
视频截取
内置mediainfo模块显示视频信息
预置常用压制参数，可以在preset文件夹下以txt文档增加或删除常用参数
更换x264为06_taro编译版。直接在x264中完成音频封装和字幕内嵌
增加了For Win8的版本

2012/03/27
增加完成后关机
参数保存
封装mp4增加fps参数

2012/03/16
增加x264进程优先级调整
增加AVS压制，可以压制内嵌字幕的视频
增加FLV的视频、音频抽取
界面的操作的优化

2012/01/29
批量一键压制功能，输出生成在视频目录下，批量文件列表框支持文件拖曳和拖曳排序
批量mp4和flv封装功能，输出生成在视频目录下，批量文件列表框支持文件拖曳和拖曳排序

2012/01/26
封装为mp4的功能
界面微调并更换新的图标

2011/12/29
增强了一键压制的实用性，可以处理绝大部分格式的视频

2011/8/26
增加了x264的固定码率和自定义参数模式
x264页面中的宽度或高度为0时将不改变视频分辨率 

2011/8/14
增加了MKV文件的封装和抽取
更新了内置的x264版本

2011/7/26
增加了拖曳功能 
退出程序后自动删除临时的批处理文件
增加了mp4封装flv的功能