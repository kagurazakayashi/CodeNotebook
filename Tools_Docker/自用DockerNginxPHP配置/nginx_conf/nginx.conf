user  nginx;
worker_processes 7; #工作进程数量
#worker_cpu_affinity 01 10; #进程与具体的内核进行绑定
worker_rlimit_nofile 51200; #每进程所能打开的最多文件数量
error_log /var/log/nginx/nginx.main.error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 51200; #设置每一个 worker 进程可以并发处理的最大连接数
    accept_mutex on; #没有处于工作状态的 worker 将以串行方式来处理
    accept_mutex_delay 500ms; #队首 worker 会尝试获取互斥锁的时间间隔
    multi_accept on; #系统会逐个拿出新连接按照负载均衡策略，将其分配给当前处理连接个数最少的worker。
    use epoll; #worker 与客户端连接的处理方式
}

http {
    include mime.types;
    default_type application/octet-stream; #对于无扩展名的文件，作为一个八进制流文件来处理
    #log_format tcp_format '$time_local|$remote_addr|$status|$bytes_sent|$upstream_addr|$upstream_bytes_sent|$upstream_bytes_received|$upstream_connect_time';
    access_log /var/log/nginx/nginx.access.log; #tcp_format;
    error_log /var/log/nginx/nginx.error.log;
    charset utf-8; #设置请求与响应的字符编码。
    sendfile on; #开启 Linux 系统的零拷贝机制
    tcp_nopush on; #以单独的数据包形式发送 Nginx 的响应头信息，而真正的响应体数据会再以数据包的形式发送
    tcp_nodelay on; #不设置数据发送缓存，即不推迟发送，适合于传输小数据，无需缓存。
    keepalive_timeout 60; #客户端与Nginx 间所建立的长连接的生命超时秒
    keepalive_requests 10000; #设置一个长连接最多可以发送的请求数
    client_body_timeout 60; #客户端获取 Nginx 响应的超时时限
    server_names_hash_bucket_size 512;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50m;
    fastcgi_connect_timeout 60;
    fastcgi_send_timeout 60;
    fastcgi_read_timeout 60;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_intercept_errors on;
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
    gzip_vary on;
    gzip_proxied   expired no-cache no-store private auth;
    gzip_disable   "MSIE [1-6]\.";
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    server_tokens off;
    include conf.d/*.conf;
}
